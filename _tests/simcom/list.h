/* 
 * File:   list.h
 * Author: jtrodriguez
 *
 * Created on 26 de febrero de 2021, 9:21
 */

#ifndef LIST_H
#define	LIST_H

/* ************************************************************************** */
/* ************************************************************************** */
/* Section: Included Files                                                    */
/* ************************************************************************** */
/* ************************************************************************** */

#ifdef	__cplusplus
extern "C" {
#endif

    /* ************************************************************************** */
    /* ************************************************************************** */
    /* Section: Constants                                                         */
    /* ************************************************************************** */
    /* ************************************************************************** */


    /* ************************************************************************** */
    /* ************************************************************************** */
    /* Section: Data types & Definitions                                          */
    /* ************************************************************************** */

/* ************************************************************************** */
    typedef struct _t_LIST_NODE {
        size_t size;
        void *data;
        struct _t_LIST_NODE *sig;
    } t_LIST_NODE;

    /* ************************************************************************** */
    /* ************************************************************************** */
    /* Section: Interface Functions                                               */
    /* ************************************************************************** */
    /* ************************************************************************** */
t_LIST_NODE *list_create_node (void *data, size_t dataSize);
int32_t list_push_node (t_LIST_NODE **list, t_LIST_NODE *node);
t_LIST_NODE *list_pull_node (t_LIST_NODE **list);
int32_t list_free_node (t_LIST_NODE **node);
//Combinados
int32_t list_add_data(t_LIST_NODE **list, void *data, size_t dataSize);
int32_t list_delete (t_LIST_NODE **list);

#ifdef	__cplusplus
}
#endif

#endif	/* LIST_H */

